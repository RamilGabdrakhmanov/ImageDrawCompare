apply plugin: 'com.android.application'
apply plugin: 'ram.gab.selectors'

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.1"
    defaultConfig {
        applicationId "ramilgabdrakhmanov.programmres"
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

afterEvaluate { project ->
    println '!!!afterEvaluate...!!!'

    Task createPNGstask = project.tasks.findByName("mergeDebugResources")
    println 'Task name ' + createPNGstask

    Task createSelectorsTask = project.tasks.findByName("createSelectors")

    createPNGstask.dependsOn(createSelectorsTask)

    project.tasks.each {
        println 'in name ' + it
    }




//    def variants = null
//    if (project.android.hasProperty('applicationVariants')) {
//        variants = project.android.applicationVariants
//    }
//    else if (project.android.hasProperty('libraryVariants')) {
//        variants = project.android.libraryVariants
//    }
//    else {
//        throw new IllegalStateException('Android project must have applicationVariants or libraryVariants!')
//    }
//
////    VariantScope variantScope = variantData.getScope();
//
//
//    variants.all { variant ->
//        println variant.getName()
//    }
}



dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compile 'com.android.support:appcompat-v7:26.0.2'
    compile 'com.android.support:recyclerview-v7:26.0.2'


    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    testCompile 'junit:junit:4.12'
}
